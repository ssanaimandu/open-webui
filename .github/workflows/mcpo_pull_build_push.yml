name: Build and Push MCPO Image to Docker Hub

on:
  # open-webui/mcpo 리포지토리에 새로운 릴리즈가 생성될 때마다 워크플로우를 실행합니다.
  repository_dispatch:
    types: [new-release]
  # 수동으로 워크플로우를 실행할 수 있도록 workflow_dispatch를 추가합니다.
  workflow_dispatch:

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push image
        run: |
          # ghcr.io/open-webui/mcpo:main 이미지를 기반으로 하는 Dockerfile을 동적으로 생성합니다.
          cat <<EOF > Dockerfile
          FROM ghcr.io/open-webui/mcpo:main

          # 루트 권한으로 전환하여 도커 클라이언트를 설치합니다.
          USER root

          # 패키지 목록을 업데이트하고 Docker 클라이언트 및 빌드 도구를 설치합니다.
          RUN apt-get update && \
              apt-get install -y --no-install-recommends \
              docker.io \
              build-essential \
              libpq-dev \
              python3-dev && \
              rm -rf /var/lib/apt/lists/*
          
          # 요청된 Python 모듈을 설치합니다.
          RUN /usr/local/bin/pip3 install pandas matplotlib psycopg2 requests fastmcp

          # 원래 사용자로 다시 전환합니다. (필요한 경우)
          # USER 1001
          EOF

          # Docker 이미지를 빌드하고 Docker Hub에 푸시합니다.
          docker buildx build \
            --platform linux/amd64,linux/arm64 \
            --tag ${{ secrets.DOCKERHUB_USERNAME }}/mcpo:latest \
            --tag ${{ secrets.DOCKERHUB_USERNAME }}/mcpo:${{ github.event.client_payload.release.tag_name || 'manual' }} \
            --push .

